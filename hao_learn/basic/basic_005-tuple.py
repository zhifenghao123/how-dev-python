# Python基本数据类型-元组
'''
本质：是一个有序集合
特性：1）与列表非常相似； 2）一旦初始化就不能修改； 3）使用小括号
'''
def basic_005_01():
    '''
    （1）创建
    创建格式：
        元组名 = (元素1, 元素2, ……, 元素n)
    '''
    # 创建空元祖
    t1 = ()
    print(t1, type(t1))
    # 创建带元素的元组，元组的元素类型可以不同
    t2 = (1, 2, 3, 4, 5)
    print(t2)
    # 创建含有一个元素的元组，需要加一个逗号
    t3 = (1,)
    print(t3, type(t3))

    '''
    （2）元组元素的访问
    '''
    # 取值  元组名[下标]
    t4 = (1, 2, 3, 4, 5)
    print(t4[2])
    # print(t4[7]) #下标越界
    print(t4[-1])
    # print(t4[-7]) #下标越界
    # 注意：元素是不能修改的，但是如果元组的元素是列表类型，那么列表中元素是可以修改的
    t5 = (1, 2, 3, 4, 5, [6, 7, 8])
    # t5[3] = 100 # 报错
    # t5[5] = [1,2,3] # 报错
    t5[5][0] = 60
    print(t5)

    '''
    （3）元组操作
    '''
    t6 = (1, 2, 3)
    t7 = (4, 5, 6)
    t8 = t6 + t7
    print(t8, t6, t7)
    print(t6 * 3)

    '''
    （4）元组截取
    '''
    t9 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 0)
    print(t9[3:7])
    print(t9[3:])
    print(t9[:7])
    print(t9[3:-2])

    '''
    （5）元组对称赋值
    '''
    # 用于函数返回多个返回值
    num1, num2 = (1, 2)
    # 如果只有一个占位符，可以省略小括号，但是最好不要省略
    print("num1 = %d" % num1)
    print("num2 = %d" % (num2))

# 操作方法
def basic_005_02():
    '''
    （1）len(seq)
    '''
    print(len((1, 2, 3, 4)))

    '''
    （2）max()
    '''
    '''
    （3）min()
    '''
    '''
    （4）tuple(seq)
    将其他类型的集合转为元组类型
    '''
    print(tuple("baism"))
    print(tuple([1, 2, 3, 4]))

if __name__ == '__main__':
    basic_005_01()
    basic_005_02()